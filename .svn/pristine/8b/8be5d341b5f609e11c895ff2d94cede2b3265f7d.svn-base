Ext.define('Isidamaps.services.medorgView.MedorgController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.medorg',
    Medorg: null,

    mainBoxReady: function () {
        var me = this,
            property = me.getViewModel().getStore('Property');
        property.load(function (records) {
            records.forEach(function (data) {
                me.urlGeodata = data.get('urlGeodata');
            });
            ymaps.ready(function () {
                me.createMap();
            });
        });
    },

    createMap: function () {
        var me = this,
            bounds = [
                [60.2, 29.8],
                [59.7, 30.5]
            ];
        me.Medorg = Ext.create('Isidamaps.services.medorgView.MapService', {
            viewModel: me.getViewModel(),
            markerClick: me.markerClick,
            clustersClick: me.clustersClick,
            boundsMap: bounds,
            urlGeodata: me.urlGeodata,
            getStoreMarkerInfo: me.getStoreMarkerInfo
        });
        me.Medorg.optionsObjectManager();
        me.Medorg.readMarkers();
        var ymapWrapper = me.lookupReference('ymapWrapper');
        ymapWrapper.on('resize', function () {
            me.Medorg.resizeMap();
        });
    },

    layoutReady: function () {
    },

    tabChange: function (panel, newTab, oldTab) {
    },

    fireTabEvent: function (tab) {
    },

    getStoreMarkerInfo: function (object) {
        var me = this,
            urlInfoMarker = Ext.String.format(me.urlGeodata + '/info?objectid={0}&objecttype={1}', object.id, object.customOptions.objectType);
        return Ext.create('Ext.data.Store', {
            model: 'Isidamaps.model.InfoMedorgs',
            proxy: {
                type: 'ajax',
                url: urlInfoMarker,
                reader: {
                    type: 'json',
                    rootProperty: 'additionalInfo.megOrg'
                }
            },
            autoLoad: false
        });
    },

    clustersClick: function (coords, cluster) {
        var me = this,
            ymapWrapper = Ext.getCmp('mapId'),
            sizeCmp = ymapWrapper.getSize(),
            win = Ext.WindowManager.getActive();
        if (win) {
            win.close();
        }
        if ((sizeCmp.width / 2) < coords[0]) {
            coords[0] -= 600;
            coords[1] += 20;
        }
        if ((sizeCmp.height / 2) < coords[1]) {
            coords[1] -= 300;
        }
        Ext.create('Ext.window.Window', {
            title: 'Кластер',
            layout: 'hbox',
            border: 'fit',
            width: 821,
            height: 405,
            scrollable: 'vertical',
            items: [{
                xtype: 'panel',
                id: 'markerInClustersId',
                autoScroll: true,
                layout: 'vbox',
                height: '100%',
                width: '30%'
            },
                {
                    xtype: 'panel',
                    id: 'infoMarkerId',
                    autoScroll: true,
                    height: '100%',
                    width: '70%'
                }
            ]
        }).showAt(coords);
        var markerInClusters = Ext.getCmp('markerInClustersId'),
            infoMarker = Ext.getCmp('infoMarkerId');
        markerInClusters.removeAll();
        cluster.features.forEach(function (marker) {
            markerInClusters.add(Ext.create('Ext.Button', {
                text: marker.customOptions.organizationName,
                maxWidth: 200,
                minWidth: 200,
                margin: 5,
                listeners: {
                    click: function () {
                        var storeMarker = me.getStoreMarkerInfo(marker);
                        infoMarker.removeAll();
                        storeMarker.load({
                            callback: function (records, operation, success) {
                                if (success === true) {
                                    if (records.length === 0) {
                                        Ext.Msg.alert('Ошибка', 'Данные об организации временно не доступны');
                                    }
                                }
                                if (success === false) {
                                    try {
                                        Ext.Msg.alert('Ошибка', 'Данные об организации временно не доступны');
                                    } catch (e) {
                                        Ext.Msg.alert('Ошибка', 'Данные об организации временно не доступны');
                                    }
                                }
                                if (success === true) {
                                    if (records.length > 0) {
                                        infoMarker.add(Ext.create('Ext.Panel', {
                                            layout: 'form',
                                            border: 'fit',
                                            autoScroll: true,
                                            width: '100%',
                                            height: '100%',
                                            items: [{
                                                xtype: 'form',
                                                margin: 0,
                                                items: [{
                                                    xtype: 'displayfield',
                                                    name: 'name',
                                                    labelWidth: '100%',
                                                    margin: 0
                                                }]
                                            }],
                                            listeners: {
                                                afterrender: function (component) {
                                                    var form = component.down('form');
                                                    form.loadRecord(storeMarker.first());
                                                }
                                            }
                                        }))
                                    }
                                }
                            }
                        })
                    }
                }
            }))
        })
    },

    markerClick: function (object, coords, infoMarker) {
        var ymapWrapper = Ext.getCmp('mapId'),
            sizeCmp = ymapWrapper.getSize(),
            win = Ext.WindowManager.getActive();
        if (win) {
            win.close();
        }
        sizeCmp.width = sizeCmp.width * 1.55;
        if ((sizeCmp.width / 2) < coords[0]) {
            coords[0] -= 450;
            coords[1] += 20;
        }
        if ((sizeCmp.height / 2) < coords[1]) {
            coords[1] -= 150;
        }
        infoMarker.load({
            callback: function (records, operation, success) {
                if (success === true) {
                    if (records.length === 0) {
                        Ext.Msg.alert('Ошибка', 'Данные об организации временно не доступны');
                    }
                }
                if (success === false) {
                    try {
                        Ext.Msg.alert('Ошибка', 'Данные об организации временно не доступны');
                    } catch (e) {
                        Ext.Msg.alert('Ошибка', 'Данные об организации временно не доступны');
                    }
                }
                if (success === true) {
                    if (records.length > 0) {
                        Ext.create('Ext.window.Window', {
                            title: 'Мед. учереждение',
                            layout: 'form',
                            border: 'fit',
                            resizable: false,
                            width: 400,
                            items: [{
                                xtype: 'form',
                                height: '100%',
                                width: '100%',
                                items: [{
                                    xtype: 'form',
                                    height: '100%',
                                    width: '100%',
                                    margin: 0,
                                    items: [{
                                        xtype: 'displayfield',
                                        name: 'name',
                                        labelWidth: '100%',
                                        margin: 0
                                    }]
                                }]
                            }],
                            listeners: {
                                afterrender: function (component) {
                                    var form = component.down('form');
                                    form.loadRecord(infoMarker.first());
                                }
                            }
                        }).showAt(coords);
                    }
                }
            }
        })
    }
});
